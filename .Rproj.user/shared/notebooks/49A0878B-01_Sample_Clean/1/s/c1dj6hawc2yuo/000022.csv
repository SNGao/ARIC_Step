"0","bland_altman_plots = list()"
"0","for (i in 1:(length(algorithms) - 1)) {"
"0","  for (j in (i+1):length(algorithms)) {"
"0","    # 计算 Bland-Altman 数据"
"0","    ba_data <- blandr.statistics(data[[algorithms[i]]], data[[algorithms[j]]])"
"0","    "
"0","    # 创建一个数据框，包含差异和平均值"
"0","    plot_data <- data.frame("
"0","      mean = (data[[algorithms[i]]] + data[[algorithms[j]]]) / 2,"
"0","      difference = data[[algorithms[i]]] - data[[algorithms[j]]]"
"0","    )"
"0","    "
"0","    # 进行线性回归"
"0","    lm_fit <- lm(difference ~ mean, data = plot_data)"
"0","    lm_coef <- tidy(lm_fit)"
"0","    "
"0","    # 提取系数"
"0","    intercept <- lm_coef$estimate[1]"
"0","    intercept <- lm_coef$estimate[2]"
"0","    "
"0","    # 创建 Bland-Altman 图"
"0","    p <- ggplot(plot_data, aes(x = mean, y = difference)) +"
"0","      geom_point(alpha = 0.5) +"
"0","      geom_hline(yintercept = ba_data$bias, color = ""blue"", linetype = ""dashed"") +"
"0","      geom_hline(yintercept = ba_data$upperLOA, color = ""red"", linetype = ""dashed"") +"
"0","      geom_hline(yintercept = ba_data$lowerLOA, color = ""red"", linetype = ""dashed"") +"
"0","      geom_smooth(method = ""lm"", color = ""green"", se = TRUE) +  # 线性回归线"
"0","      labs("
"0","        x = ""Mean of two measurements"","
"0","        y = ""Difference between measurements"","
"0","        title = paste0(algorithms[i], ' - ', algorithms[j]),"
"0","        subtitle = ""Bland-Altman Plot with Linear Regression"""
"0","      ) +"
"0","      custom_theme +"
"0","      annotate(""text"", x = 0.5*max(plot_data$mean)+0.5*min(plot_data$mean), "
"0","               y = max(plot_data$difference), "
"0","               label = sprintf(""y = %.3fx + %.3f"", slope, intercept), "
"0","               hjust = 0, vjust = 1)"
"0","    "
"0","    # 保存图形"
"0","    bland_altman_plots[[paste(algorithms[i], algorithms[j], sep = ""_vs_"")]] <- p"
"0","  }"
"0","}"
"0",""
"0","bland_altman_plots$adept_vs_oak"
"1","[38;5;232m`geom_smooth()` using formula = 'y ~ x'[39m
"
