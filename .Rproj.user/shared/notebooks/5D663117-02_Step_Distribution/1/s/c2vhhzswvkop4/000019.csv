"0","df = dat.step[,-1]/1000"
"0",""
"0","# Row:i, Column:j"
"0","custom_theme <- theme_minimal(base_size = 15) + "
"0","  theme("
"0","    plot.title = element_text(hjust = 0.5, face = ""bold"", size = 10),"
"0","    axis.text = element_text(size = 9),"
"0","    axis.title = element_text(size = 9),"
"0","    panel.grid.major = element_line(color = ""grey90""),"
"0","    panel.border = element_rect(color = ""black"", fill = NA),"
"0","    #panel.grid.major = element_blank(),  "
"0","    panel.grid.minor = element_blank(),  "
"0","    axis.ticks = element_blank(),"
"0","    plot.subtitle = element_text(size = 8, face = ""italic"", hjust = 0.5),"
"0","    plot.margin = margin(6, 6, 6, 6))"
"0",""
"0","# Initializes the drawing list"
"0","plot.all <- list()"
"0",""
"0","# Iterate through all step_algorithms, generating a graph for each location"
"0","for (i in 1:length(step_algorithms)) {"
"0","  for (j in 1:length(step_algorithms)) {"
"0","    "
"0","    # Diagonal i = j: histogram"
"0","    if (i == j) {"
"0","      plot.all[[paste0('H', i, i)]] <- ggplot(df, aes(x = !!sym(step_algorithms[i]))) +"
"0","        geom_histogram("
"0","          aes(y = ..count..), "
"0","          bins = 15, "
"0","          fill = ""#3D72BE"",  #skyblue"
"0","          color = ""white"""
"0","        ) + labs("
"0","          title = paste0(step_algorithms[i]),"
"0","          x = ""Step Counts"","
"0","          y = ""Frequency"""
"0","        ) + custom_theme"
"0","      next"
"0","    }"
"0","    "
"0","    # Upper triangular position i<j: Bland-Altman"
"0","    if (i < j) {"
"0","      # Calculate Bland-Altman data"
"0","      ba_data <- blandr.statistics(df[[step_algorithms[i]]], "
"0","                                   df[[step_algorithms[j]]])"
"0","      "
"0","      # Dataframe with differences and averages"
"0","      plot_data <- data.frame("
"0","        mean = (df[[step_algorithms[i]]] + df[[step_algorithms[j]]]) / 2,"
"0","        difference = df[[step_algorithms[i]]] - df[[step_algorithms[j]]]"
"0","      )"
"0","      # Linear regression"
"0","      lm_fit <- lm(difference ~ mean, data = plot_data)"
"0","      lm_coef <- tidy(lm_fit)"
"0","      "
"0","      # Extract Coefficients"
"0","      intercept <- lm_coef$estimate[1]"
"0","      slope <- lm_coef$estimate[2]"
"0","      "
"0","      # Create Bland-Altman"
"0","      p <- ggplot(plot_data, aes(x = mean, y = difference)) +"
"0","        geom_point(alpha = 0.3, color = 'black') +"
"0","        geom_hline(yintercept = ba_data$bias, color = ""blue"", linetype = ""dashed"") +"
"0","        geom_hline(yintercept = ba_data$upperLOA, color = ""red"", linetype = ""dashed"") +"
"0","        geom_hline(yintercept = ba_data$lowerLOA, color = ""red"", linetype = ""dashed"") +"
"0","        geom_smooth(method = ""loess"", color = ""#E74C3C"", se = TRUE, span = 2, fill = '#E74C3C') +  "
"0","        labs("
"0","          x = paste0(""Mean of "", step_algorithms[i], "" and "", step_algorithms[j]), "
"0","          y = paste0(""Difference ("", step_algorithms[i], "" - "", step_algorithms[j], "")""),"
"0","          title = paste0(step_algorithms[i], "" ~ "", step_algorithms[j])"
"0","        ) + custom_theme"
"0","      "
"0","      plot.all[[paste0('BA', i, j)]] <- p"
"0","      next"
"0","    }"
"0","    "
"0","    # Lower triangular position i>j: pairwise scatter plots"
"0","    if (i > j) {"
"0","      correlation <- cor(df[[step_algorithms[i]]], df[[step_algorithms[j]]])"
"0","      "
"0","      plot.all[[paste0('PP', i, j)]] <- ggplot(df, aes("
"0","        x = !!sym(step_algorithms[i]), y = !!sym(step_algorithms[j])"
"0","      )) +"
"0","        geom_point(color = ""#E74C3C"", alpha = 0.3) +"
"0","        geom_smooth("
"0","          method = ""gam"", formula = y ~ s(x, bs = ""cs"", k = 5), "
"0","          color = ""black"", size = 1, se = TRUE, fill = ""black"""
"0","        ) +"
"0","        custom_theme + "
"0","        labs("
"0","          title = paste0(step_algorithms[i], "" ~ "", step_algorithms[j]),"
"0","          x = step_algorithms[i],"
"0","          y = step_algorithms[j]"
"0","        ) + annotate(""text"", "
"0","                 x = min(df[[step_algorithms[i]]]), "
"0","                 y = Inf, "
"0","                 label = paste0(""r = "", round(correlation, 2)), "
"0","           hjust = 0, vjust = 2.0, size = 4, color = ""black"", fontface = ""bold"")"
"0","        # scale_y_continuous(limits = c(min(df[[step_algorithms[i]]], df[[step_algorithms[j]]]),"
"0","        #                               max(df[[step_algorithms[i]]], df[[step_algorithms[j]]]))) + "
"0","        # scale_x_continuous(limits = c(min(df[[step_algorithms[i]]], df[[step_algorithms[j]]]),"
"0","        #                               max(df[[step_algorithms[i]]], df[[step_algorithms[j]]])))"
"0","      next"
"0","    }"
"0","  }"
"0","}"
"0",""
"0","combined_plot <- wrap_plots("
"0","  plot.all$H11, plot.all$BA12, plot.all$BA13, plot.all$BA14, plot.all$BA15,"
"0","  plot.all$PP21, plot.all$H22, plot.all$BA23, plot.all$BA24, plot.all$BA25,"
"0","  plot.all$PP31, plot.all$PP32, plot.all$H33, plot.all$BA34, plot.all$BA35,"
"0","  plot.all$PP41, plot.all$PP42, plot.all$PP43, plot.all$H44, plot.all$BA45,"
"0","  plot.all$PP51, plot.all$PP52, plot.all$PP53, plot.all$PP54, plot.all$H55,"
"0","  ncol = 5"
"0",") & "
"0","theme(legend.position = 'bottom')"
"0",""
"0","png('Results/03_Combined.png', width = 12, height = 12, units = 'in', res = 300)"
"0","print(combined_plot)"
"1","[38;5;232m`geom_smooth()` using formula = 'y ~ x'[39m
"
"1","[38;5;232m`geom_smooth()` using formula = 'y ~ x'[39m
"
"1","[38;5;232m`geom_smooth()` using formula = 'y ~ x'[39m
"
"1","[38;5;232m`geom_smooth()` using formula = 'y ~ x'[39m
"
"1","[38;5;232m`geom_smooth()` using formula = 'y ~ x'[39m
"
"1","[38;5;232m`geom_smooth()` using formula = 'y ~ x'[39m
"
"1","[38;5;232m`geom_smooth()` using formula = 'y ~ x'[39m
"
"1","[38;5;232m`geom_smooth()` using formula = 'y ~ x'[39m
"
"1","[38;5;232m`geom_smooth()` using formula = 'y ~ x'[39m
"
"1","[38;5;232m`geom_smooth()` using formula = 'y ~ x'[39m
"
