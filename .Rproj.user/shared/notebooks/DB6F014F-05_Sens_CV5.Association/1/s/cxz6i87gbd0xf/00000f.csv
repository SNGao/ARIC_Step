"0","combined_dt <- do.call(rbind, continuous.result)"
"0","combined_dt$Label = row.names(combined_dt)"
"0",""
"0","library(tidyr)"
"0","combined_dt = combined_dt %>%"
"0","  separate(Label, into = c(""outcome"", ""algorithm""), sep = ""\\."", remove = FALSE)"
"0",""
"0","unique(combined_dt$outcome)"
"1"," [1]"
"1"," ""BMI""      "
"1"," ""TG""       "
"1"," ""TC""       "
"1"," ""FAT""      "
"1"," ""FAT_mass"" "
"1"," ""HDL_C""    "
"1"," ""LDL_C""    "
"1"," ""SBP""      "
"1","
"
"1"," [9]"
"1"," ""DBP""      "
"1"," ""SPPB""     "
"1"," ""Frailty_A"""
"1"," ""Frailty_B"""
"1"," ""Overall""  "
"1"," ""CES_D""    "
"1","
"
"0","label_names <- c('BMI', 'TG', 'TC', 'Fat (%)', 'Fat (Kg)', 'HDL-C', 'LDL-C',"
"0","                 'SBP', 'DBP', 'SPPB', 'Frality-A', 'Frality-B', 'Cognition', 'CES-D')"
"0",""
"0","combined_dt = combined_dt |>"
"0","  mutate(algorithm = case_when("
"0","    algorithm == 'adept' ~ 'ADEPT',"
"0","    algorithm == 'oak' ~ 'OAK',"
"0","    algorithm == 'sdt' ~ 'SDT',"
"0","    algorithm == 'stepcount_ssl' ~ 'Stepcount',"
"0","    algorithm == 'vs' ~ 'Verisence'"
"0","  ))"
"0","p <- ggplot(combined_dt, aes(x = outcome, y = Estimate, color = algorithm, group = algorithm)) +"
"0","    geom_point(position = position_dodge(0.5)) +"
"0","    geom_errorbar(aes(ymin = Lower, ymax = Upper), "
"0","                  size = 0.7,width = 0.5, position = position_dodge(0.5)) +"
"0","    geom_hline(yintercept = 0, linetype = ""solid"") +"
"0","    labs(y = ""Scaled Estimate (95%CI)"", "
"0","         x = ""Health Statues"", "
"0","         color = ""Models"") +"
"0","    theme_minimal() + "
"0","    theme("
"0","      panel.background = element_blank(),"
"0","      axis.ticks = element_blank(),"
"0","      axis.text = element_text(size = 12),"
"0","      axis.title = element_text(size = 14, face = ""bold""),"
"0","      axis.line = element_line(size = 0.5),"
"0","      plot.title = element_text(size = 14, face = ""bold"", hjust = 0.5),"
"0","      legend.text = element_text(size = 13),  # 图例标签的字体更大加粗"
"0","      legend.title = element_text(size = 14, face = ""bold""),"
"0","      "
"0","      legend.position = ""top"",  # 图例放置在底部"
"0","      legend.direction = ""horizontal"",  # 图例水平显示"
"0","      legend.box = ""horizontal"""
"0","  )+"
"0","    theme(axis.text.x = element_text(angle = 30, hjust = 1, size = 12, face = ""bold"")) + "
"0","    scale_x_discrete(labels = label_names)"
"0","    "
"0",""
"0","pdf('Results/06_Linear_continuous_Model2_NonScale.pdf', width = 13, height = 6)"
"0","print(p)"
