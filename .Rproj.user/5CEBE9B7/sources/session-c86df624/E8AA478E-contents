
## Lab-1 Question 6
```{r}
library(mvtnorm)
set.seed(12275)
mm <- c(35, 38, 43, 49, 48)
C <- matrix(c(1,0.85,0.80,0.72,0.69,0.85,1,0.85,0.80,0.72,0.80,0.85,1, 0.85,0.80,0.72,0.80,0.85,1,0.85,0.69,0.72,0.80,0.85,1),nrow=5) 
sigma <- C * 100
y <- rmvnorm(n=100, mean=mm, sigma=sigma)
id <- seq(1,100)
dat <- as.data.frame(cbind(y,id))
names(dat) <- c("y1","y2","y3","y4","y5","id")
```

```{r}
head(dat, 5)
```
```{r}
library(ggplot2)
library(reshape2)

dat_long <- melt(dat, id.vars = "id", 
                 variable.name = "Visit", 
                 value.name = "SF36_Mental")

# Convert Visit to a numeric factor
dat_long$Visit <- as.numeric(gsub("y", "", dat_long$Visit))

# Create the spaghetti plot
ggplot(dat_long, aes(x = Visit, y = SF36_Mental, group = id)) +
  geom_line(color = "grey", alpha = 0.5) +  # Individual lines
  geom_boxplot(aes(group = Visit), width = 0.4, alpha = 0.5) +  # Boxplots
  stat_summary(aes(group = 1), fun = mean, geom = "point",
               shape = 19, size = 3, color = "black") +  # Mean points
  stat_summary(aes(group = 1), fun = mean, geom = "line",
               color = "red", size = 0.5,
               alpha = 0.4) +  # Mean line
  labs(title = "Spaghetti Plot of SF-36 Mental vs Visit", x = "Visit", y = "SF-36 Mental") +
  theme_minimal()
```

```{r}
pairs(dat[, 1:5], 
      pch = 1,      # Plot symbol
      bg = "black",  # Background color for points
      main = "Pairs Plot of Y Variables")
```


```{r}
colMeans(dat)
cov(dat[,-ncol(dat)])
cor(dat[,-ncol(dat)])
```


```{r}
set.seed(12275)

n <- 100  # number of individuals
p <- 5    # number of observations per individual

# Mean vector for the error matrix
mean_e <- rep(0, p)

# Covariance matrix for the error matrix 
## (diagonal with 100 on the main diagonal)
cov_e <- diag(100, p)

# Step 1: Generate the 100 x 5 matrix of random errors (eij)
errors <- MASS::mvrnorm(n = n, mu = mean_e, Sigma = cov_e)

# Step 2: Generate a vector of 100 random intercepts (bi)
random_intercepts <- rnorm(n, mean = 0, sd = sqrt(120))

# Step 3: Define the mean vector for Y (mj)
m <- c(35, 38, 43, 49, 48)

# Create the 100 x 5 matrix of Y values
Y <- matrix(NA, n, p)
for (i in 1:n) {
  Y[i, ] <- m + random_intercepts[i] + errors[i, ]
}

Y = data.frame(Y); Y = cbind(Y, 1:100)
colnames(Y) = c("y1","y2","y3","y4","y5","id")
# Display the first few rows of the generated data
head(Y)
```

```{r}
library(ggplot2)
library(reshape2)
dat = Y

dat_long <- melt(dat, id.vars = "id", 
                 variable.name = "Visit", 
                 value.name = "SF36_Mental")

# Convert Visit to a numeric factor
dat_long$Visit <- as.numeric(gsub("y", "", dat_long$Visit))

# Create the spaghetti plot
ggplot(dat_long, aes(x = Visit, y = SF36_Mental, group = id)) +
  geom_line(color = "grey", alpha = 0.5) +  # Individual lines
  geom_boxplot(aes(group = Visit), width = 0.4, alpha = 0.5) +  # Boxplots
  stat_summary(aes(group = 1), fun = mean, geom = "point",
               shape = 19, size = 3, color = "black") +  # Mean points
  stat_summary(aes(group = 1), fun = mean, geom = "line",
               color = "red", size = 0.5,
               alpha = 0.4) +  # Mean line
  labs(title = "Spaghetti Plot of SF-36 Mental vs Visit", x = "Visit", y = "SF-36 Mental") +
  theme_minimal()
```
```{r}
pairs(dat[, 1:5], 
      pch = 1,      # Plot symbol
      bg = "black",  # Background color for points
      main = "Pairs Plot of Y Variables")
```

```{r}
cor(dat[, 1:5])
```